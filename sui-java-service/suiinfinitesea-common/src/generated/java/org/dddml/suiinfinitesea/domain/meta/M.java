// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.domain.meta;

import java.util.*;

import org.dddml.suiinfinitesea.specialization.*;


public class M {

  // /////////////////////////////////////////
  public static class BoundedContextMetadata {

    public static final String NAME_REQUESTER_ID                = "requesterId";
    public static final String DISCRIMINATOR_COMMAND_TYPE       = "commandType";
    public static final String DISCRIMINATOR_EVENT_TYPE         = "eventType";
    public static final String DISCRIMINATOR_COMMAND_ID         = "commandId";

    public static final String HTTP_SERVICE_ORDERS_QUERY_NAME           = "sort";
    public static final String HTTP_SERVICE_FIRST_RESULT_QUERY_NAME     = "firstResult";
    public static final String HTTP_SERVICE_MAX_RESULTS_QUERY_NAME      = "maxResults";
    public static final String HTTP_SERVICE_RETURNED_FIELDS_QUERY_NAME  = "fields";
    public static final String HTTP_SERVICE_FILTER_QUERY_NAME           = "filter";

    public static final Map<String, String> TYPE_NAME_TO_AGGREGATE_NAME_MAP;

    public static final Map<String, Class<?>> CLASS_MAP;

    static {
        Map<String, String> typeToAggMap = new HashMap<>();

        typeToAggMap.put("Avatar", "Avatar");
        typeToAggMap.put("AvatarChange", "AvatarChange");
        typeToAggMap.put("SkillProcess", "SkillProcess");
        typeToAggMap.put("Ship", "Ship");
        typeToAggMap.put("Roster", "Roster");
        typeToAggMap.put("ShipBattle", "ShipBattle");
        typeToAggMap.put("RosterLocation", "RosterLocation");
        typeToAggMap.put("FaucetRequested", "FaucetRequested");
        typeToAggMap.put("Item", "Item");
        typeToAggMap.put("ItemCreation", "ItemCreation");
        typeToAggMap.put("ItemProduction", "ItemProduction");
        typeToAggMap.put("Player", "Player");
        typeToAggMap.put("MapLocation", "Map");
        typeToAggMap.put("Map", "Map");
        typeToAggMap.put("WhitelistEntry", "Whitelist");
        typeToAggMap.put("Whitelist", "Whitelist");
        typeToAggMap.put("RosterShipsItem", "Roster");
        typeToAggMap.put("ExperienceTable", "ExperienceTable");
        TYPE_NAME_TO_AGGREGATE_NAME_MAP = typeToAggMap;

        Map<String, Class<?>> clsMap = new HashMap<>();
        clsMap.put("bool", Boolean.class);
        clsMap.put("Boolean", Boolean.class);
        clsMap.put("bool?", Boolean.class);
        clsMap.put("DateTime", java.util.Date.class);
        clsMap.put("Date", java.util.Date.class);
        clsMap.put("java.util.Date", java.util.Date.class);
        clsMap.put("DateTime?", java.util.Date.class);
        clsMap.put("decimal", java.math.BigDecimal.class);
        clsMap.put("BigDecimal", java.math.BigDecimal.class);
        clsMap.put("java.math.BigDecimal", java.math.BigDecimal.class);
        clsMap.put("decimal?", java.math.BigDecimal.class);
        clsMap.put("int", Integer.class);
        clsMap.put("Integer", Integer.class);
        clsMap.put("int?", Integer.class);
        clsMap.put("long", Long.class);
        clsMap.put("Long", Long.class);
        clsMap.put("long?", Long.class);
        clsMap.put("string", String.class);
        clsMap.put("String", String.class);
        clsMap.put("U8", Integer.class);
        clsMap.put("U16", Integer.class);
        clsMap.put("U32", Long.class);
        clsMap.put("U64", java.math.BigInteger.class);
        clsMap.put("BigInteger", java.math.BigInteger.class);
        clsMap.put("java.math.BigInteger", java.math.BigInteger.class);
        clsMap.put("U128", java.math.BigInteger.class);
        clsMap.put("U256", java.math.BigInteger.class);
        clsMap.put("u8", Integer.class);
        clsMap.put("u16", Integer.class);
        clsMap.put("u32", Long.class);
        clsMap.put("u64", java.math.BigInteger.class);
        clsMap.put("u128", java.math.BigInteger.class);
        clsMap.put("u256", java.math.BigInteger.class);
        clsMap.put("AsciiString", String.class);
        clsMap.put("vector<u8>", int[].class);
        clsMap.put("int[]", int[].class);
        clsMap.put("JsonObject", java.util.Map.class);
        clsMap.put("java.util.Map<String, Object>", java.util.Map.class);
        clsMap.put("java.util.Map", java.util.Map.class);
        clsMap.put("blob", java.sql.Blob.class);
        clsMap.put("java.sql.Blob", java.sql.Blob.class);
        clsMap.put("byte-array", byte[].class);
        clsMap.put("byte[]", byte[].class);
        clsMap.put("object", Object.class);
        clsMap.put("Object", Object.class);
        clsMap.put("date-time", java.sql.Timestamp.class);
        clsMap.put("java.sql.Timestamp", java.sql.Timestamp.class);
        clsMap.put("date", java.sql.Date.class);
        clsMap.put("java.sql.Date", java.sql.Date.class);
        clsMap.put("time", java.sql.Time.class);
        clsMap.put("java.sql.Time", java.sql.Time.class);
        clsMap.put("currency-amount", java.math.BigDecimal.class);
        clsMap.put("currency-precise", java.math.BigDecimal.class);
        clsMap.put("fixed-point", java.math.BigDecimal.class);
        clsMap.put("floating-point", Double.class);
        clsMap.put("Double", Double.class);
        clsMap.put("numeric", Long.class);
        clsMap.put("id-long", String.class);
        clsMap.put("id-vlong", String.class);
        clsMap.put("indicator", String.class);
        clsMap.put("very-short", String.class);
        clsMap.put("short-varchar", String.class);
        clsMap.put("long-varchar", String.class);
        clsMap.put("very-long", String.class);
        clsMap.put("comment", String.class);
        clsMap.put("description", String.class);
        clsMap.put("name", String.class);
        clsMap.put("value", String.class);
        clsMap.put("credit-card-number", String.class);
        clsMap.put("credit-card-date", String.class);
        clsMap.put("email", String.class);
        clsMap.put("url", String.class);
        clsMap.put("id-long-ne", String.class);
        clsMap.put("id-vlong-ne", String.class);
        clsMap.put("tel-number", String.class);
        clsMap.put("UID", String.class);
        clsMap.put("ID", String.class);
        clsMap.put("address", String.class);
        clsMap.put("Balance", java.math.BigInteger.class);
        CLASS_MAP = clsMap;
    }

    private BoundedContextMetadata() {
    }
  }


  // /////////////////////////////////////////////////////////  
  public static class AvatarMetadata {

    private AvatarMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "owner",
            "name",
            "imageUrl",
            "description",
            "backgroundColor",
            "race",
            "eyes",
            "mouth",
            "haircut",
            "skin",
            "outfit",
            "accessories",
            "aura",
            "symbols",
            "effects",
            "backgrounds",
            "decorations",
            "badges",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "String",
            "String",
            "String",
            "Long",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("owner", "owner");
        aliasMap.put("Owner", "owner");
        aliasMap.put("name", "name");
        aliasMap.put("Name", "name");
        aliasMap.put("imageUrl", "imageUrl");
        aliasMap.put("ImageUrl", "imageUrl");
        aliasMap.put("description", "description");
        aliasMap.put("Description", "description");
        aliasMap.put("backgroundColor", "backgroundColor");
        aliasMap.put("BackgroundColor", "backgroundColor");
        aliasMap.put("race", "race");
        aliasMap.put("Race", "race");
        aliasMap.put("eyes", "eyes");
        aliasMap.put("Eyes", "eyes");
        aliasMap.put("mouth", "mouth");
        aliasMap.put("Mouth", "mouth");
        aliasMap.put("haircut", "haircut");
        aliasMap.put("Haircut", "haircut");
        aliasMap.put("skin", "skin");
        aliasMap.put("Skin", "skin");
        aliasMap.put("outfit", "outfit");
        aliasMap.put("Outfit", "outfit");
        aliasMap.put("accessories", "accessories");
        aliasMap.put("Accessories", "accessories");
        aliasMap.put("aura", "aura");
        aliasMap.put("Aura", "aura");
        aliasMap.put("symbols", "symbols");
        aliasMap.put("Symbols", "symbols");
        aliasMap.put("effects", "effects");
        aliasMap.put("Effects", "effects");
        aliasMap.put("backgrounds", "backgrounds");
        aliasMap.put("Backgrounds", "backgrounds");
        aliasMap.put("decorations", "decorations");
        aliasMap.put("Decorations", "decorations");
        aliasMap.put("badges", "badges");
        aliasMap.put("Badges", "badges");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class AvatarChangeMetadata {

    private AvatarChangeMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "avatarId",
            "imageUrl",
            "backgroundColor",
            "haircut",
            "outfit",
            "accessories",
            "aura",
            "symbols",
            "effects",
            "backgrounds",
            "decorations",
            "badges",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "Long",
            "Integer",
            "Integer",
            "Integer",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "int[]",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("avatarId", "avatarId");
        aliasMap.put("AvatarId", "avatarId");
        aliasMap.put("imageUrl", "imageUrl");
        aliasMap.put("ImageUrl", "imageUrl");
        aliasMap.put("backgroundColor", "backgroundColor");
        aliasMap.put("BackgroundColor", "backgroundColor");
        aliasMap.put("haircut", "haircut");
        aliasMap.put("Haircut", "haircut");
        aliasMap.put("outfit", "outfit");
        aliasMap.put("Outfit", "outfit");
        aliasMap.put("accessories", "accessories");
        aliasMap.put("Accessories", "accessories");
        aliasMap.put("aura", "aura");
        aliasMap.put("Aura", "aura");
        aliasMap.put("symbols", "symbols");
        aliasMap.put("Symbols", "symbols");
        aliasMap.put("effects", "effects");
        aliasMap.put("Effects", "effects");
        aliasMap.put("backgrounds", "backgrounds");
        aliasMap.put("Backgrounds", "backgrounds");
        aliasMap.put("decorations", "decorations");
        aliasMap.put("Decorations", "decorations");
        aliasMap.put("badges", "badges");
        aliasMap.put("Badges", "badges");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class SkillProcessMetadata {

    private SkillProcessMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String URL_ID_FIELD_SEPARATOR = ",";

    public static final TextFormatter<org.dddml.suiinfinitesea.domain.SkillProcessId> URL_ID_TEXT_FORMATTER =
                    new AbstractValueObjectTextFormatter<org.dddml.suiinfinitesea.domain.SkillProcessId>(org.dddml.suiinfinitesea.domain.SkillProcessId.class, URL_ID_FIELD_SEPARATOR) {
                        @Override
                        protected Class<?> getClassByTypeName(String type) {
                            return BoundedContextMetadata.CLASS_MAP.get(type);
                        }
                    };

    public static final Class ID_CLASS = org.dddml.suiinfinitesea.domain.SkillProcessId.class;

    public static final String[] propertyNames = new String[] {
            "itemId",
            "startedAt",
            "creationTime",
            "completed",
            "endedAt",
            "energyVault",
            "batchSize",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "skillProcessId.skillType",
            "skillProcessId.playerId",
            "skillProcessId.sequenceNumber",
    };

    public static final String[] propertyTypes = new String[] {
            "Long",
            "BigInteger",
            "BigInteger",
            "Boolean",
            "BigInteger",
            "java.math.BigInteger",
            "Long",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "Integer",
            "String",
            "Integer",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("itemId", "itemId");
        aliasMap.put("ItemId", "itemId");
        aliasMap.put("startedAt", "startedAt");
        aliasMap.put("StartedAt", "startedAt");
        aliasMap.put("creationTime", "creationTime");
        aliasMap.put("CreationTime", "creationTime");
        aliasMap.put("completed", "completed");
        aliasMap.put("Completed", "completed");
        aliasMap.put("endedAt", "endedAt");
        aliasMap.put("EndedAt", "endedAt");
        aliasMap.put("energyVault", "energyVault");
        aliasMap.put("EnergyVault", "energyVault");
        aliasMap.put("batchSize", "batchSize");
        aliasMap.put("BatchSize", "batchSize");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("skillProcessId.skillType", "skillProcessId.skillType");
        aliasMap.put("SkillProcessId.SkillType", "skillProcessId.skillType");
        aliasMap.put("skillProcessId.playerId", "skillProcessId.playerId");
        aliasMap.put("SkillProcessId.PlayerId", "skillProcessId.playerId");
        aliasMap.put("skillProcessId.sequenceNumber", "skillProcessId.sequenceNumber");
        aliasMap.put("SkillProcessId.SequenceNumber", "skillProcessId.sequenceNumber");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ShipMetadata {

    private ShipMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "owner",
            "healthPoints",
            "attack",
            "protection",
            "speed",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "Long",
            "Long",
            "Long",
            "Long",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("owner", "owner");
        aliasMap.put("Owner", "owner");
        aliasMap.put("healthPoints", "healthPoints");
        aliasMap.put("HealthPoints", "healthPoints");
        aliasMap.put("attack", "attack");
        aliasMap.put("Attack", "attack");
        aliasMap.put("protection", "protection");
        aliasMap.put("Protection", "protection");
        aliasMap.put("speed", "speed");
        aliasMap.put("Speed", "speed");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class RosterMetadata {

    private RosterMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String URL_ID_FIELD_SEPARATOR = ",";

    public static final TextFormatter<org.dddml.suiinfinitesea.domain.RosterId> URL_ID_TEXT_FORMATTER =
                    new AbstractValueObjectTextFormatter<org.dddml.suiinfinitesea.domain.RosterId>(org.dddml.suiinfinitesea.domain.RosterId.class, URL_ID_FIELD_SEPARATOR) {
                        @Override
                        protected Class<?> getClassByTypeName(String type) {
                            return BoundedContextMetadata.CLASS_MAP.get(type);
                        }
                    };

    public static final Class ID_CLASS = org.dddml.suiinfinitesea.domain.RosterId.class;

    public static final String[] propertyNames = new String[] {
            "status",
            "speed",
            "ships",
            "coordinatesUpdatedAt",
            "sailDuration",
            "shipBattleId",
            "environmentOwned",
            "baseExperience",
            "energyVault",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "rosterId.playerId",
            "rosterId.sequenceNumber",
            "updatedCoordinates.x",
            "updatedCoordinates.y",
            "targetCoordinates.x",
            "targetCoordinates.y",
            "originCoordinates.x",
            "originCoordinates.y",
    };

    public static final String[] propertyTypes = new String[] {
            "Integer",
            "Long",
            "ObjectTable",
            "BigInteger",
            "BigInteger",
            "String",
            "Boolean",
            "Long",
            "java.math.BigInteger",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "String",
            "Integer",
            "Long",
            "Long",
            "Long",
            "Long",
            "Long",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("status", "status");
        aliasMap.put("Status", "status");
        aliasMap.put("speed", "speed");
        aliasMap.put("Speed", "speed");
        aliasMap.put("ships", "ships");
        aliasMap.put("Ships", "ships");
        aliasMap.put("coordinatesUpdatedAt", "coordinatesUpdatedAt");
        aliasMap.put("CoordinatesUpdatedAt", "coordinatesUpdatedAt");
        aliasMap.put("sailDuration", "sailDuration");
        aliasMap.put("SailDuration", "sailDuration");
        aliasMap.put("shipBattleId", "shipBattleId");
        aliasMap.put("ShipBattleId", "shipBattleId");
        aliasMap.put("environmentOwned", "environmentOwned");
        aliasMap.put("EnvironmentOwned", "environmentOwned");
        aliasMap.put("baseExperience", "baseExperience");
        aliasMap.put("BaseExperience", "baseExperience");
        aliasMap.put("energyVault", "energyVault");
        aliasMap.put("EnergyVault", "energyVault");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("rosterId.playerId", "rosterId.playerId");
        aliasMap.put("RosterId.PlayerId", "rosterId.playerId");
        aliasMap.put("rosterId.sequenceNumber", "rosterId.sequenceNumber");
        aliasMap.put("RosterId.SequenceNumber", "rosterId.sequenceNumber");
        aliasMap.put("updatedCoordinates.x", "updatedCoordinates.x");
        aliasMap.put("UpdatedCoordinates.X", "updatedCoordinates.x");
        aliasMap.put("updatedCoordinates.y", "updatedCoordinates.y");
        aliasMap.put("UpdatedCoordinates.Y", "updatedCoordinates.y");
        aliasMap.put("targetCoordinates.x", "targetCoordinates.x");
        aliasMap.put("TargetCoordinates.X", "targetCoordinates.x");
        aliasMap.put("targetCoordinates.y", "targetCoordinates.y");
        aliasMap.put("TargetCoordinates.Y", "targetCoordinates.y");
        aliasMap.put("originCoordinates.x", "originCoordinates.x");
        aliasMap.put("OriginCoordinates.X", "originCoordinates.x");
        aliasMap.put("originCoordinates.y", "originCoordinates.y");
        aliasMap.put("OriginCoordinates.Y", "originCoordinates.y");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class RosterShipsItemMetadata {

    private RosterShipsItemMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String[] propertyNames = new String[] {
            "key",
            "value",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "rosterShipsItemId.rosterIdPlayerId",
            "rosterShipsItemId.rosterIdSequenceNumber",
            "rosterShipsItemId.key",
            "rosterId.playerId",
            "rosterId.sequenceNumber",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "java.util.Map<String, Object>",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "String",
            "Integer",
            "String",
            "String",
            "Integer",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("key", "rosterShipsItemId.key");
        aliasMap.put("Key", "rosterShipsItemId.key");
        aliasMap.put("value", "value");
        aliasMap.put("Value", "value");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("rosterShipsItemId.rosterIdPlayerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("RosterShipsItemId.RosterIdPlayerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("rosterShipsItemId.rosterId.playerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("RosterShipsItemId.RosterId.PlayerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("rosterShipsItemId.rosterIdSequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("RosterShipsItemId.RosterIdSequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("rosterShipsItemId.rosterId.sequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("RosterShipsItemId.RosterId.SequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("rosterShipsItemId.key", "rosterShipsItemId.key");
        aliasMap.put("RosterShipsItemId.Key", "rosterShipsItemId.key");
        aliasMap.put("rosterId.playerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("RosterId.PlayerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("rosterId.playerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("RosterId.PlayerId", "rosterShipsItemId.rosterIdPlayerId");
        aliasMap.put("rosterId.sequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("RosterId.SequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("rosterId.sequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
        aliasMap.put("RosterId.SequenceNumber", "rosterShipsItemId.rosterIdSequenceNumber");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ShipBattleMetadata {

    private ShipBattleMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "initiator",
            "responder",
            "status",
            "endedAt",
            "winner",
            "roundNumber",
            "roundStartedAt",
            "roundMover",
            "roundAttackerShip",
            "roundDefenderShip",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "String",
            "Integer",
            "BigInteger",
            "Integer",
            "Long",
            "BigInteger",
            "Integer",
            "String",
            "String",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("initiator", "initiator");
        aliasMap.put("Initiator", "initiator");
        aliasMap.put("responder", "responder");
        aliasMap.put("Responder", "responder");
        aliasMap.put("status", "status");
        aliasMap.put("Status", "status");
        aliasMap.put("endedAt", "endedAt");
        aliasMap.put("EndedAt", "endedAt");
        aliasMap.put("winner", "winner");
        aliasMap.put("Winner", "winner");
        aliasMap.put("roundNumber", "roundNumber");
        aliasMap.put("RoundNumber", "roundNumber");
        aliasMap.put("roundStartedAt", "roundStartedAt");
        aliasMap.put("RoundStartedAt", "roundStartedAt");
        aliasMap.put("roundMover", "roundMover");
        aliasMap.put("RoundMover", "roundMover");
        aliasMap.put("roundAttackerShip", "roundAttackerShip");
        aliasMap.put("RoundAttackerShip", "roundAttackerShip");
        aliasMap.put("roundDefenderShip", "roundDefenderShip");
        aliasMap.put("RoundDefenderShip", "roundDefenderShip");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class RosterLocationMetadata {

    private RosterLocationMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "rosterObjectId",
            "status",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "coordinates.x",
            "coordinates.y",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "Integer",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "Long",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("rosterObjectId", "rosterObjectId");
        aliasMap.put("RosterObjectId", "rosterObjectId");
        aliasMap.put("status", "status");
        aliasMap.put("Status", "status");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("coordinates.x", "coordinates.x");
        aliasMap.put("Coordinates.X", "coordinates.x");
        aliasMap.put("coordinates.y", "coordinates.y");
        aliasMap.put("Coordinates.Y", "coordinates.y");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class FaucetRequestedMetadata {

    private FaucetRequestedMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "eventId",
            "requesterAccount",
            "requestedAmount",
            "description",
            "suiPackageId",
            "suiTransactionModule",
            "suiSender",
            "suiType",
            "suiTimestamp",
            "suiTxDigest",
            "suiEventSeq",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "nextCursor.txDigest",
            "nextCursor.eventSeq",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "BigInteger",
            "String",
            "String",
            "String",
            "String",
            "String",
            "Long",
            "String",
            "BigInteger",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "String",
            "BigInteger",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("eventId", "eventId");
        aliasMap.put("EventId", "eventId");
        aliasMap.put("requesterAccount", "requesterAccount");
        aliasMap.put("RequesterAccount", "requesterAccount");
        aliasMap.put("requestedAmount", "requestedAmount");
        aliasMap.put("RequestedAmount", "requestedAmount");
        aliasMap.put("description", "description");
        aliasMap.put("Description", "description");
        aliasMap.put("suiPackageId", "suiPackageId");
        aliasMap.put("SuiPackageId", "suiPackageId");
        aliasMap.put("suiTransactionModule", "suiTransactionModule");
        aliasMap.put("SuiTransactionModule", "suiTransactionModule");
        aliasMap.put("suiSender", "suiSender");
        aliasMap.put("SuiSender", "suiSender");
        aliasMap.put("suiType", "suiType");
        aliasMap.put("SuiType", "suiType");
        aliasMap.put("suiTimestamp", "suiTimestamp");
        aliasMap.put("SuiTimestamp", "suiTimestamp");
        aliasMap.put("suiTxDigest", "suiTxDigest");
        aliasMap.put("SuiTxDigest", "suiTxDigest");
        aliasMap.put("suiEventSeq", "suiEventSeq");
        aliasMap.put("SuiEventSeq", "suiEventSeq");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("nextCursor.txDigest", "nextCursor.txDigest");
        aliasMap.put("NextCursor.TxDigest", "nextCursor.txDigest");
        aliasMap.put("nextCursor.eventSeq", "nextCursor.eventSeq");
        aliasMap.put("NextCursor.EventSeq", "nextCursor.eventSeq");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ItemMetadata {

    private ItemMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = Long.class;

    public static final String[] propertyNames = new String[] {
            "itemId",
            "name",
            "requiredForCompletion",
            "sellsFor",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
    };

    public static final String[] propertyTypes = new String[] {
            "Long",
            "String",
            "Boolean",
            "Long",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("itemId", "itemId");
        aliasMap.put("ItemId", "itemId");
        aliasMap.put("name", "name");
        aliasMap.put("Name", "name");
        aliasMap.put("requiredForCompletion", "requiredForCompletion");
        aliasMap.put("RequiredForCompletion", "requiredForCompletion");
        aliasMap.put("sellsFor", "sellsFor");
        aliasMap.put("SellsFor", "sellsFor");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ItemCreationMetadata {

    private ItemCreationMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String URL_ID_FIELD_SEPARATOR = ",";

    public static final TextFormatter<org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair> URL_ID_TEXT_FORMATTER =
                    new AbstractValueObjectTextFormatter<org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair>(org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair.class, URL_ID_FIELD_SEPARATOR) {
                        @Override
                        protected Class<?> getClassByTypeName(String type) {
                            return BoundedContextMetadata.CLASS_MAP.get(type);
                        }
                    };

    public static final Class ID_CLASS = org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair.class;

    public static final String[] propertyNames = new String[] {
            "resourceCost",
            "requirementsLevel",
            "baseQuantity",
            "baseExperience",
            "baseCreationTime",
            "energyCost",
            "successRate",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "itemCreationId.skillType",
            "itemCreationId.itemId",
    };

    public static final String[] propertyTypes = new String[] {
            "Long",
            "Integer",
            "Long",
            "Long",
            "BigInteger",
            "BigInteger",
            "Integer",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "Integer",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("resourceCost", "resourceCost");
        aliasMap.put("ResourceCost", "resourceCost");
        aliasMap.put("requirementsLevel", "requirementsLevel");
        aliasMap.put("RequirementsLevel", "requirementsLevel");
        aliasMap.put("baseQuantity", "baseQuantity");
        aliasMap.put("BaseQuantity", "baseQuantity");
        aliasMap.put("baseExperience", "baseExperience");
        aliasMap.put("BaseExperience", "baseExperience");
        aliasMap.put("baseCreationTime", "baseCreationTime");
        aliasMap.put("BaseCreationTime", "baseCreationTime");
        aliasMap.put("energyCost", "energyCost");
        aliasMap.put("EnergyCost", "energyCost");
        aliasMap.put("successRate", "successRate");
        aliasMap.put("SuccessRate", "successRate");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("itemCreationId.skillType", "itemCreationId.skillType");
        aliasMap.put("ItemCreationId.SkillType", "itemCreationId.skillType");
        aliasMap.put("itemCreationId.itemId", "itemCreationId.itemId");
        aliasMap.put("ItemCreationId.ItemId", "itemCreationId.itemId");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ItemProductionMetadata {

    private ItemProductionMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String URL_ID_FIELD_SEPARATOR = ",";

    public static final TextFormatter<org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair> URL_ID_TEXT_FORMATTER =
                    new AbstractValueObjectTextFormatter<org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair>(org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair.class, URL_ID_FIELD_SEPARATOR) {
                        @Override
                        protected Class<?> getClassByTypeName(String type) {
                            return BoundedContextMetadata.CLASS_MAP.get(type);
                        }
                    };

    public static final Class ID_CLASS = org.dddml.suiinfinitesea.domain.SkillTypeItemIdPair.class;

    public static final String[] propertyNames = new String[] {
            "requirementsLevel",
            "baseQuantity",
            "baseExperience",
            "baseCreationTime",
            "energyCost",
            "successRate",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "itemProductionId.skillType",
            "itemProductionId.itemId",
    };

    public static final String[] propertyTypes = new String[] {
            "Integer",
            "Long",
            "Long",
            "BigInteger",
            "BigInteger",
            "Integer",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "Integer",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("requirementsLevel", "requirementsLevel");
        aliasMap.put("RequirementsLevel", "requirementsLevel");
        aliasMap.put("baseQuantity", "baseQuantity");
        aliasMap.put("BaseQuantity", "baseQuantity");
        aliasMap.put("baseExperience", "baseExperience");
        aliasMap.put("BaseExperience", "baseExperience");
        aliasMap.put("baseCreationTime", "baseCreationTime");
        aliasMap.put("BaseCreationTime", "baseCreationTime");
        aliasMap.put("energyCost", "energyCost");
        aliasMap.put("EnergyCost", "energyCost");
        aliasMap.put("successRate", "successRate");
        aliasMap.put("SuccessRate", "successRate");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("itemProductionId.skillType", "itemProductionId.skillType");
        aliasMap.put("ItemProductionId.SkillType", "itemProductionId.skillType");
        aliasMap.put("itemProductionId.itemId", "itemProductionId.itemId");
        aliasMap.put("ItemProductionId.ItemId", "itemProductionId.itemId");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class PlayerMetadata {

    private PlayerMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "owner",
            "level",
            "experience",
            "name",
            "version",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "claimedIsland.x",
            "claimedIsland.y",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "Integer",
            "Long",
            "String",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "Long",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("owner", "owner");
        aliasMap.put("Owner", "owner");
        aliasMap.put("level", "level");
        aliasMap.put("Level", "level");
        aliasMap.put("experience", "experience");
        aliasMap.put("Experience", "experience");
        aliasMap.put("name", "name");
        aliasMap.put("Name", "name");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("claimedIsland.x", "claimedIsland.x");
        aliasMap.put("ClaimedIsland.X", "claimedIsland.x");
        aliasMap.put("claimedIsland.y", "claimedIsland.y");
        aliasMap.put("ClaimedIsland.Y", "claimedIsland.y");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class WhitelistMetadata {

    private WhitelistMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "paused",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "version",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "Boolean",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "BigInteger",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("paused", "paused");
        aliasMap.put("Paused", "paused");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class WhitelistEntryMetadata {

    private WhitelistEntryMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String[] propertyNames = new String[] {
            "accountAddress",
            "name",
            "imageUrl",
            "description",
            "backgroundColor",
            "race",
            "eyes",
            "mouth",
            "haircut",
            "skin",
            "outfit",
            "accessories",
            "claimed",
            "paused",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "whitelistId",
            "whitelistEntryId.whitelistId",
            "whitelistEntryId.accountAddress",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "String",
            "String",
            "String",
            "Long",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Integer",
            "Boolean",
            "Boolean",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "String",
            "String",
            "String",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("accountAddress", "whitelistEntryId.accountAddress");
        aliasMap.put("AccountAddress", "whitelistEntryId.accountAddress");
        aliasMap.put("name", "name");
        aliasMap.put("Name", "name");
        aliasMap.put("imageUrl", "imageUrl");
        aliasMap.put("ImageUrl", "imageUrl");
        aliasMap.put("description", "description");
        aliasMap.put("Description", "description");
        aliasMap.put("backgroundColor", "backgroundColor");
        aliasMap.put("BackgroundColor", "backgroundColor");
        aliasMap.put("race", "race");
        aliasMap.put("Race", "race");
        aliasMap.put("eyes", "eyes");
        aliasMap.put("Eyes", "eyes");
        aliasMap.put("mouth", "mouth");
        aliasMap.put("Mouth", "mouth");
        aliasMap.put("haircut", "haircut");
        aliasMap.put("Haircut", "haircut");
        aliasMap.put("skin", "skin");
        aliasMap.put("Skin", "skin");
        aliasMap.put("outfit", "outfit");
        aliasMap.put("Outfit", "outfit");
        aliasMap.put("accessories", "accessories");
        aliasMap.put("Accessories", "accessories");
        aliasMap.put("claimed", "claimed");
        aliasMap.put("Claimed", "claimed");
        aliasMap.put("paused", "paused");
        aliasMap.put("Paused", "paused");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("whitelistId", "whitelistEntryId.whitelistId");
        aliasMap.put("WhitelistId", "whitelistEntryId.whitelistId");
        aliasMap.put("whitelistEntryId.whitelistId", "whitelistEntryId.whitelistId");
        aliasMap.put("WhitelistEntryId.WhitelistId", "whitelistEntryId.whitelistId");
        aliasMap.put("whitelistEntryId.accountAddress", "whitelistEntryId.accountAddress");
        aliasMap.put("WhitelistEntryId.AccountAddress", "whitelistEntryId.accountAddress");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class MapMetadata {

    private MapMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "version",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "BigInteger",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class MapLocationMetadata {

    private MapLocationMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final String[] propertyNames = new String[] {
            "type",
            "occupiedBy",
            "gatheredAt",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "mapId",
            "coordinates.x",
            "coordinates.y",
            "mapLocationId.mapId",
            "mapLocationId.coordinatesX",
            "mapLocationId.coordinatesY",
    };

    public static final String[] propertyTypes = new String[] {
            "Long",
            "String",
            "BigInteger",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "String",
            "Long",
            "Long",
            "String",
            "Long",
            "Long",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("type", "type");
        aliasMap.put("Type", "type");
        aliasMap.put("occupiedBy", "occupiedBy");
        aliasMap.put("OccupiedBy", "occupiedBy");
        aliasMap.put("gatheredAt", "gatheredAt");
        aliasMap.put("GatheredAt", "gatheredAt");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("mapId", "mapLocationId.mapId");
        aliasMap.put("MapId", "mapLocationId.mapId");
        aliasMap.put("coordinates.x", "mapLocationId.coordinatesX");
        aliasMap.put("Coordinates.X", "mapLocationId.coordinatesX");
        aliasMap.put("coordinates.x", "mapLocationId.coordinatesX");
        aliasMap.put("Coordinates.X", "mapLocationId.coordinatesX");
        aliasMap.put("coordinates.y", "mapLocationId.coordinatesY");
        aliasMap.put("Coordinates.Y", "mapLocationId.coordinatesY");
        aliasMap.put("coordinates.y", "mapLocationId.coordinatesY");
        aliasMap.put("Coordinates.Y", "mapLocationId.coordinatesY");
        aliasMap.put("mapLocationId.mapId", "mapLocationId.mapId");
        aliasMap.put("MapLocationId.MapId", "mapLocationId.mapId");
        aliasMap.put("mapLocationId.coordinatesX", "mapLocationId.coordinatesX");
        aliasMap.put("MapLocationId.CoordinatesX", "mapLocationId.coordinatesX");
        aliasMap.put("mapLocationId.coordinates.x", "mapLocationId.coordinatesX");
        aliasMap.put("MapLocationId.Coordinates.X", "mapLocationId.coordinatesX");
        aliasMap.put("mapLocationId.coordinatesY", "mapLocationId.coordinatesY");
        aliasMap.put("MapLocationId.CoordinatesY", "mapLocationId.coordinatesY");
        aliasMap.put("mapLocationId.coordinates.y", "mapLocationId.coordinatesY");
        aliasMap.put("MapLocationId.Coordinates.Y", "mapLocationId.coordinatesY");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }


  // /////////////////////////////////////////////////////////  
  public static class ExperienceTableMetadata {

    private ExperienceTableMetadata() {
    }

    public static final String PROPERTY_NAME_VERSION      = "offChainVersion";
    public static final String PROPERTY_NAME_ACTIVE       = "active";
    public static final String PROPERTY_NAME_DELETED      = "deleted";
    public static final String PROPERTY_NAME_CREATED_BY   = "createdBy";
    public static final String PROPERTY_NAME_CREATED_AT   = "createdAt";
    public static final String PROPERTY_NAME_UPDATED_BY   = "updatedBy";
    public static final String PROPERTY_NAME_UPDATED_AT   = "updatedAt";

    public static final Class ID_CLASS = String.class;

    public static final String[] propertyNames = new String[] {
            "id",
            "offChainVersion",
            "createdBy",
            "createdAt",
            "updatedBy",
            "updatedAt",
            "active",
            "deleted",
            "version",
    };

    public static final String[] propertyTypes = new String[] {
            "String",
            "Long",
            "String",
            "Date",
            "String",
            "Date",
            "Boolean",
            "Boolean",
            "BigInteger",
    };

    public static final Map<String, String> propertyTypeMap;

    public static final Map<String, String> aliasMap;

    static {
        propertyTypeMap = new HashMap<String, String>();
        initPropertyTypeMap();
        aliasMap = new HashMap<String, String>();
        initAliasMap();
    }

    private static  void initAliasMap() {
        aliasMap.put("id", "id");
        aliasMap.put("Id", "id");
        aliasMap.put("offChainVersion", "offChainVersion");
        aliasMap.put("OffChainVersion", "offChainVersion");
        aliasMap.put("createdBy", "createdBy");
        aliasMap.put("CreatedBy", "createdBy");
        aliasMap.put("createdAt", "createdAt");
        aliasMap.put("CreatedAt", "createdAt");
        aliasMap.put("updatedBy", "updatedBy");
        aliasMap.put("UpdatedBy", "updatedBy");
        aliasMap.put("updatedAt", "updatedAt");
        aliasMap.put("UpdatedAt", "updatedAt");
        aliasMap.put("active", "active");
        aliasMap.put("Active", "active");
        aliasMap.put("deleted", "deleted");
        aliasMap.put("Deleted", "deleted");
        aliasMap.put("version", "version");
        aliasMap.put("Version", "version");
    }

    private static void initPropertyTypeMap() {
        for (int i = 0; i < propertyNames.length; i++ ) {
            propertyTypeMap.put(propertyNames[i], propertyTypes[i]);
        }
    }

  }

}


