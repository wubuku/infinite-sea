// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.domain.avatar;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.suiinfinitesea.domain.*;
import org.dddml.suiinfinitesea.specialization.Event;

public interface AvatarState extends VersionedSuiMoveObject
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getId();

    String getOwner();

    String getName();

    String getImageUrl();

    String getDescription();

    Long getBackgroundColor();

    Integer getRace();

    Integer getEyes();

    Integer getMouth();

    Integer getHaircut();

    Integer getSkin();

    Integer getOutfit();

    Integer getAccessories();

    int[] getAura();

    int[] getSymbols();

    int[] getEffects();

    int[] getBackgrounds();

    int[] getDecorations();

    int[] getBadges();

    Long getOffChainVersion();

    String getCreatedBy();

    Date getCreatedAt();

    String getUpdatedBy();

    Date getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    interface MutableAvatarState extends AvatarState, VersionedSuiMoveObject.MutableVersionedSuiMoveObject {
        void setId(String id);

        void setOwner(String owner);

        void setName(String name);

        void setImageUrl(String imageUrl);

        void setDescription(String description);

        void setBackgroundColor(Long backgroundColor);

        void setRace(Integer race);

        void setEyes(Integer eyes);

        void setMouth(Integer mouth);

        void setHaircut(Integer haircut);

        void setSkin(Integer skin);

        void setOutfit(Integer outfit);

        void setAccessories(Integer accessories);

        void setAura(int[] aura);

        void setSymbols(int[] symbols);

        void setEffects(int[] effects);

        void setBackgrounds(int[] backgrounds);

        void setDecorations(int[] decorations);

        void setBadges(int[] badges);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(Date createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(Date updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);


        void mutate(Event e);

        //void when(AvatarEvent.AvatarStateCreated e);

        //void when(AvatarEvent.AvatarStateMergePatched e);

        //void when(AvatarEvent.AvatarStateDeleted e);
    }

    interface SqlAvatarState extends MutableAvatarState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

