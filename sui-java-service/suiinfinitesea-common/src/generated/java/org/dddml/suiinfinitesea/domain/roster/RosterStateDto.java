// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.domain.roster;

import java.util.*;
import java.math.*;
import org.dddml.suiinfinitesea.domain.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.suiinfinitesea.specialization.*;


public class RosterStateDto {

    private RosterId rosterId;

    public RosterId getRosterId()
    {
        return this.rosterId;
    }

    public void setRosterId(RosterId rosterId)
    {
        this.rosterId = rosterId;
    }

    private String id_;

    public String getId_()
    {
        return this.id_;
    }

    public void setId_(String id)
    {
        this.id_ = id;
    }

    private Integer status;

    public Integer getStatus()
    {
        return this.status;
    }

    public void setStatus(Integer status)
    {
        this.status = status;
    }

    private Long speed;

    public Long getSpeed()
    {
        return this.speed;
    }

    public void setSpeed(Long speed)
    {
        this.speed = speed;
    }

    private ObjectTable ships;

    public ObjectTable getShips()
    {
        return this.ships;
    }

    public void setShips(ObjectTable ships)
    {
        this.ships = ships;
    }

    private Coordinates updatedCoordinates;

    public Coordinates getUpdatedCoordinates()
    {
        return this.updatedCoordinates;
    }

    public void setUpdatedCoordinates(Coordinates updatedCoordinates)
    {
        this.updatedCoordinates = updatedCoordinates;
    }

    private BigInteger coordinatesUpdatedAt;

    public BigInteger getCoordinatesUpdatedAt()
    {
        return this.coordinatesUpdatedAt;
    }

    public void setCoordinatesUpdatedAt(BigInteger coordinatesUpdatedAt)
    {
        this.coordinatesUpdatedAt = coordinatesUpdatedAt;
    }

    private Coordinates targetCoordinates;

    public Coordinates getTargetCoordinates()
    {
        return this.targetCoordinates;
    }

    public void setTargetCoordinates(Coordinates targetCoordinates)
    {
        this.targetCoordinates = targetCoordinates;
    }

    private BigInteger sailDuration;

    public BigInteger getSailDuration()
    {
        return this.sailDuration;
    }

    public void setSailDuration(BigInteger sailDuration)
    {
        this.sailDuration = sailDuration;
    }

    private String shipBattleId;

    public String getShipBattleId()
    {
        return this.shipBattleId;
    }

    public void setShipBattleId(String shipBattleId)
    {
        this.shipBattleId = shipBattleId;
    }

    private Boolean environmentOwned;

    public Boolean getEnvironmentOwned()
    {
        return this.environmentOwned;
    }

    public void setEnvironmentOwned(Boolean environmentOwned)
    {
        this.environmentOwned = environmentOwned;
    }

    private Long baseExperience;

    public Long getBaseExperience()
    {
        return this.baseExperience;
    }

    public void setBaseExperience(Long baseExperience)
    {
        this.baseExperience = baseExperience;
    }

    private java.math.BigInteger energyVault;

    public java.math.BigInteger getEnergyVault()
    {
        return this.energyVault;
    }

    public void setEnergyVault(java.math.BigInteger energyVault)
    {
        this.energyVault = energyVault;
    }

    private BigInteger version;

    public BigInteger getVersion()
    {
        return this.version;
    }

    public void setVersion(BigInteger version)
    {
        this.version = version;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt)
    {
        this.updatedAt = updatedAt;
    }

    private RosterShipsItemStateDto[] rosterShipsItems;

    public RosterShipsItemStateDto[] getRosterShipsItems()
    {
        return this.rosterShipsItems;
    }    

    public void setRosterShipsItems(RosterShipsItemStateDto[] rosterShipsItems)
    {
        this.rosterShipsItems = rosterShipsItems;
    }

    private String[] shipIds;

    public String[] getShipIds() {
        return this.shipIds;
    }

    public void setShipIds(String[] shipIds) {
        this.shipIds = shipIds;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{"RosterShipsItems"});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public RosterStateDto[] toRosterStateDtoArray(Iterable<RosterState> states) {
            return toRosterStateDtoList(states).toArray(new RosterStateDto[0]);
        }

        public List<RosterStateDto> toRosterStateDtoList(Iterable<RosterState> states) {
            ArrayList<RosterStateDto> stateDtos = new ArrayList();
            for (RosterState s : states) {
                RosterStateDto dto = toRosterStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public RosterStateDto toRosterStateDto(RosterState state)
        {
            if(state == null) {
                return null;
            }
            RosterStateDto dto = new RosterStateDto();
            if (returnedFieldsContains("RosterId")) {
                dto.setRosterId(state.getRosterId());
            }
            if (returnedFieldsContains("Id_")) {
                dto.setId_(state.getId_());
            }
            if (returnedFieldsContains("Status")) {
                dto.setStatus(state.getStatus());
            }
            if (returnedFieldsContains("Speed")) {
                dto.setSpeed(state.getSpeed());
            }
            if (returnedFieldsContains("Ships")) {
                dto.setShips(state.getShips());
            }
            if (returnedFieldsContains("UpdatedCoordinates")) {
                dto.setUpdatedCoordinates(state.getUpdatedCoordinates());
            }
            if (returnedFieldsContains("CoordinatesUpdatedAt")) {
                dto.setCoordinatesUpdatedAt(state.getCoordinatesUpdatedAt());
            }
            if (returnedFieldsContains("TargetCoordinates")) {
                dto.setTargetCoordinates(state.getTargetCoordinates());
            }
            if (returnedFieldsContains("SailDuration")) {
                dto.setSailDuration(state.getSailDuration());
            }
            if (returnedFieldsContains("ShipBattleId")) {
                dto.setShipBattleId(state.getShipBattleId());
            }
            if (returnedFieldsContains("EnvironmentOwned")) {
                dto.setEnvironmentOwned(state.getEnvironmentOwned());
            }
            if (returnedFieldsContains("BaseExperience")) {
                dto.setBaseExperience(state.getBaseExperience());
            }
            if (returnedFieldsContains("EnergyVault")) {
                dto.setEnergyVault(state.getEnergyVault());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            if (returnedFieldsContains("ShipIds")) {
                ArrayList<String> arrayList = new ArrayList();
                if (state.getShipIds() != null) {
                    for (String s : state.getShipIds()) {
                        arrayList.add(s);
                    }
                }
                dto.setShipIds(arrayList.toArray(new String[0]));
            }
            if (returnedFieldsContains("RosterShipsItems")) {
                ArrayList<RosterShipsItemStateDto> arrayList = new ArrayList();
                if (state.getRosterShipsItems() != null) {
                    RosterShipsItemStateDto.DtoConverter conv = new RosterShipsItemStateDto.DtoConverter();
                    String returnFS = CollectionUtils.mapGetValueIgnoringCase(getReturnedFields(), "RosterShipsItems");
                    if(returnFS != null) { conv.setReturnedFieldsString(returnFS); } else { conv.setAllFieldsReturned(this.getAllFieldsReturned()); }
                    for (RosterShipsItemState s : state.getRosterShipsItems()) {
                        arrayList.add(conv.toRosterShipsItemStateDto(s));
                    }
                }
                dto.setRosterShipsItems(arrayList.toArray(new RosterShipsItemStateDto[0]));
            }
            return dto;
        }

    }
}

