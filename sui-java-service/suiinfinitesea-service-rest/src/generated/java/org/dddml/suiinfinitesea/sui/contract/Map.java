// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.sui.contract;

import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.github.wubuku.sui.bean.*;

import java.math.*;
import java.util.*;

@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
public class Map {

    private UID id;

    private String adminCap;

    private BigInteger schemaVersion;

    public String getAdminCap() {
        return adminCap;
    }

    public void setAdminCap(String adminCap) {
        this.adminCap = adminCap;
    }

    public BigInteger getSchemaVersion() {
        return schemaVersion;
    }

    public void setSchemaVersion(BigInteger schemaVersion) {
        this.schemaVersion = schemaVersion;
    }

    private Long offChainVersion;

    private Boolean forNftHoldersOnly;

    private BigInteger version;

    private Table locations;

    public UID getId() {
        return id;
    }

    public void setId(UID id) {
        this.id = id;
    }

    public Long getOffChainVersion() {
        return offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion) {
        this.offChainVersion = offChainVersion;
    }

    public Boolean getForNftHoldersOnly() {
        return forNftHoldersOnly;
    }

    public void setForNftHoldersOnly(Boolean forNftHoldersOnly) {
        this.forNftHoldersOnly = forNftHoldersOnly;
    }

    public BigInteger getVersion() {
        return version;
    }

    public void setVersion(BigInteger version) {
        this.version = version;
    }

    public Table getLocations() {
        return locations;
    }

    public void setLocations(Table locations) {
        this.locations = locations;
    }

    @Override
    public String toString() {
        return "Map{" +
                "id=" + id +
                ", offChainVersion=" + offChainVersion +
                ", forNftHoldersOnly=" + forNftHoldersOnly +
                ", version=" + version +
                ", locations=" + locations +
                '}';
    }
}
