// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suiinfinitesea.sui.contract.service;

import com.github.wubuku.sui.utils.SuiJsonRpcClient;
import org.dddml.suiinfinitesea.domain.*;
import org.dddml.suiinfinitesea.domain.roster.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import org.springframework.transaction.annotation.Transactional;

import java.util.*;
import java.math.*;

@Service
public class SuiRosterService {

    @Autowired
    private RosterStateRepository rosterStateRepository;

    private SuiRosterStateRetriever suiRosterStateRetriever;

    @Autowired
    public SuiRosterService(SuiJsonRpcClient suiJsonRpcClient) {
        this.suiRosterStateRetriever = new SuiRosterStateRetriever(suiJsonRpcClient,
                rosterId -> {
                    RosterState.MutableRosterState s = new AbstractRosterState.SimpleRosterState();
                    s.setRosterId(rosterId);
                    return s;
                },
                (rosterState, key) -> (RosterShipsItemState.MutableRosterShipsItemState)
                        ((EntityStateCollection.ModifiableEntityStateCollection<String, RosterShipsItemState>) rosterState.getRosterShipsItems()).getOrAddDefault(key)
        );
    }

    @Transactional
    public void updateRosterState(String objectId) {
        RosterState rosterState = suiRosterStateRetriever.retrieveRosterState(objectId);
        if (rosterState == null) {
            return;
        }
        rosterStateRepository.merge(rosterState);
    }

    @Transactional
    public void deleteRoster(RosterId rosterId) {
        RosterState.MutableRosterState s = (RosterState.MutableRosterState) rosterStateRepository.get(rosterId, true);
        if (s != null) {
            s.setDeleted(true);
            rosterStateRepository.merge(s);
        }
    }

}

