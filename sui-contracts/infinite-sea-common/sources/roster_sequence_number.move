// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module infinite_sea_common::roster_sequence_number {
    use std::vector;

    public fun unassigned_ships(): u32 {
        0
    }

    public fun first(): u32 {
        1
    }

    public fun second(): u32 {
        2
    }

    public fun third(): u32 {
        3
    }

    public fun fourth(): u32 {
        4
    }

    public fun is_valid(v: u32): bool {
        v == unassigned_ships() || v == first() || v == second() || v == third() || v == fourth()
    }

    public fun are_all_valid(vs: &vector<u32>): bool {
        let i = 0;
        let l = vector::length(vs);
        while (i < l) {
            if (!is_valid(*vector::borrow(vs, i))) {
                return false
            };
            i = i + 1;
        };
        true
    }
}
